// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: comment/v1/comment.proto

package commentsv1

import (
	v11 "github.com/yaninyzwitty/threads-go-backend/gen/posts/v1"
	v1 "github.com/yaninyzwitty/threads-go-backend/gen/user/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The Comment message represents a user's comment on a post.
type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Author        *v1.User               `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Post          *v11.Post              `protobuf:"bytes,6,opt,name=post,proto3" json:"post,omitempty"` // The post this comment is associated with
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_comment_v1_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetAuthor() *v1.User {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Comment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Comment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Comment) GetPost() *v11.Post {
	if x != nil {
		return x.Post
	}
	return nil
}

// Request to create a new comment
type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	PostId        int64                  `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"` // int64 author_id = 3; // ID of the user creating the comment
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_comment_v1_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateCommentRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

// Response after creating a comment
type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_comment_v1_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

// Get a comment by ID
type GetCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentRequest) Reset() {
	*x = GetCommentRequest{}
	mi := &file_comment_v1_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentRequest) ProtoMessage() {}

func (x *GetCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentRequest.ProtoReflect.Descriptor instead.
func (*GetCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{3}
}

func (x *GetCommentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentResponse) Reset() {
	*x = GetCommentResponse{}
	mi := &file_comment_v1_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentResponse) ProtoMessage() {}

func (x *GetCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentResponse.ProtoReflect.Descriptor instead.
func (*GetCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type HandleCommentsUpsertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleCommentsUpsertRequest) Reset() {
	*x = HandleCommentsUpsertRequest{}
	mi := &file_comment_v1_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleCommentsUpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleCommentsUpsertRequest) ProtoMessage() {}

func (x *HandleCommentsUpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleCommentsUpsertRequest.ProtoReflect.Descriptor instead.
func (*HandleCommentsUpsertRequest) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{5}
}

func (x *HandleCommentsUpsertRequest) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type HandleCommentsUpsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Upserted      bool                   `protobuf:"varint,1,opt,name=upserted,proto3" json:"upserted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleCommentsUpsertResponse) Reset() {
	*x = HandleCommentsUpsertResponse{}
	mi := &file_comment_v1_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleCommentsUpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleCommentsUpsertResponse) ProtoMessage() {}

func (x *HandleCommentsUpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleCommentsUpsertResponse.ProtoReflect.Descriptor instead.
func (*HandleCommentsUpsertResponse) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{6}
}

func (x *HandleCommentsUpsertResponse) GetUpserted() bool {
	if x != nil {
		return x.Upserted
	}
	return false
}

var File_comment_v1_comment_proto protoreflect.FileDescriptor

const file_comment_v1_comment_proto_rawDesc = "" +
	"\n" +
	"\x18comment/v1/comment.proto\x12\vcomments.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x13posts/v1/post.proto\x1a\x12user/v1/user.proto\"\xf4\x01\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12%\n" +
	"\x06author\x18\x03 \x01(\v2\r.user.v1.UserR\x06author\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\"\n" +
	"\x04post\x18\x06 \x01(\v2\x0e.posts.v1.PostR\x04post\"I\n" +
	"\x14CreateCommentRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x17\n" +
	"\apost_id\x18\x02 \x01(\x03R\x06postId\"G\n" +
	"\x15CreateCommentResponse\x12.\n" +
	"\acomment\x18\x01 \x01(\v2\x14.comments.v1.CommentR\acomment\"#\n" +
	"\x11GetCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"D\n" +
	"\x12GetCommentResponse\x12.\n" +
	"\acomment\x18\x01 \x01(\v2\x14.comments.v1.CommentR\acomment\"M\n" +
	"\x1bHandleCommentsUpsertRequest\x12.\n" +
	"\acomment\x18\x01 \x01(\v2\x14.comments.v1.CommentR\acomment\":\n" +
	"\x1cHandleCommentsUpsertResponse\x12\x1a\n" +
	"\bupserted\x18\x01 \x01(\bR\bupserted2\xa4\x02\n" +
	"\x0eCommentService\x12V\n" +
	"\rCreateComment\x12!.comments.v1.CreateCommentRequest\x1a\".comments.v1.CreateCommentResponse\x12M\n" +
	"\n" +
	"GetComment\x12\x1e.comments.v1.GetCommentRequest\x1a\x1f.comments.v1.GetCommentResponse\x12k\n" +
	"\x14HandleCommentsUpsert\x12(.comments.v1.HandleCommentsUpsertRequest\x1a).comments.v1.HandleCommentsUpsertResponseB\xb2\x01\n" +
	"\x0fcom.comments.v1B\fCommentProtoP\x01ZDgithub.com/yaninyzwitty/threads-go-backend/gen/comment/v1;commentsv1\xa2\x02\x03CXX\xaa\x02\vComments.V1\xca\x02\vComments\\V1\xe2\x02\x17Comments\\V1\\GPBMetadata\xea\x02\fComments::V1b\x06proto3"

var (
	file_comment_v1_comment_proto_rawDescOnce sync.Once
	file_comment_v1_comment_proto_rawDescData []byte
)

func file_comment_v1_comment_proto_rawDescGZIP() []byte {
	file_comment_v1_comment_proto_rawDescOnce.Do(func() {
		file_comment_v1_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comment_v1_comment_proto_rawDesc), len(file_comment_v1_comment_proto_rawDesc)))
	})
	return file_comment_v1_comment_proto_rawDescData
}

var file_comment_v1_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_comment_v1_comment_proto_goTypes = []any{
	(*Comment)(nil),                      // 0: comments.v1.Comment
	(*CreateCommentRequest)(nil),         // 1: comments.v1.CreateCommentRequest
	(*CreateCommentResponse)(nil),        // 2: comments.v1.CreateCommentResponse
	(*GetCommentRequest)(nil),            // 3: comments.v1.GetCommentRequest
	(*GetCommentResponse)(nil),           // 4: comments.v1.GetCommentResponse
	(*HandleCommentsUpsertRequest)(nil),  // 5: comments.v1.HandleCommentsUpsertRequest
	(*HandleCommentsUpsertResponse)(nil), // 6: comments.v1.HandleCommentsUpsertResponse
	(*v1.User)(nil),                      // 7: user.v1.User
	(*timestamppb.Timestamp)(nil),        // 8: google.protobuf.Timestamp
	(*v11.Post)(nil),                     // 9: posts.v1.Post
}
var file_comment_v1_comment_proto_depIdxs = []int32{
	7,  // 0: comments.v1.Comment.author:type_name -> user.v1.User
	8,  // 1: comments.v1.Comment.created_at:type_name -> google.protobuf.Timestamp
	8,  // 2: comments.v1.Comment.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 3: comments.v1.Comment.post:type_name -> posts.v1.Post
	0,  // 4: comments.v1.CreateCommentResponse.comment:type_name -> comments.v1.Comment
	0,  // 5: comments.v1.GetCommentResponse.comment:type_name -> comments.v1.Comment
	0,  // 6: comments.v1.HandleCommentsUpsertRequest.comment:type_name -> comments.v1.Comment
	1,  // 7: comments.v1.CommentService.CreateComment:input_type -> comments.v1.CreateCommentRequest
	3,  // 8: comments.v1.CommentService.GetComment:input_type -> comments.v1.GetCommentRequest
	5,  // 9: comments.v1.CommentService.HandleCommentsUpsert:input_type -> comments.v1.HandleCommentsUpsertRequest
	2,  // 10: comments.v1.CommentService.CreateComment:output_type -> comments.v1.CreateCommentResponse
	4,  // 11: comments.v1.CommentService.GetComment:output_type -> comments.v1.GetCommentResponse
	6,  // 12: comments.v1.CommentService.HandleCommentsUpsert:output_type -> comments.v1.HandleCommentsUpsertResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_comment_v1_comment_proto_init() }
func file_comment_v1_comment_proto_init() {
	if File_comment_v1_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comment_v1_comment_proto_rawDesc), len(file_comment_v1_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comment_v1_comment_proto_goTypes,
		DependencyIndexes: file_comment_v1_comment_proto_depIdxs,
		MessageInfos:      file_comment_v1_comment_proto_msgTypes,
	}.Build()
	File_comment_v1_comment_proto = out.File
	file_comment_v1_comment_proto_goTypes = nil
	file_comment_v1_comment_proto_depIdxs = nil
}
