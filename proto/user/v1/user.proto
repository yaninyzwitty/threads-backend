syntax = "proto3";

package user.v1;


import "google/protobuf/timestamp.proto";

message User {
  int64 id = 1; // bigint from DB
  string username = 2;
  string full_name = 3;
  string email = 4;
  string profile_pic_url = 5;
  bool is_verified = 6;

  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message FollowedEvent {
  int64 user_id = 1; // TODO-remove
  int64 following_id = 2;
  google.protobuf.Timestamp followed_at = 3;
}

message UnfollowedEvent {
  int64 user_id = 1;
  int64 following_id = 2;
  google.protobuf.Timestamp unfollowed_at = 3;
}


message UserTag {
  int64 id = 1;
  int64 user_id = 2;
  string tag = 3;
}

// === Create ===
message CreateUserRequest {
  string username = 1;
  string full_name = 2;
  string email = 3;
  string profile_pic_url = 4;
}

message CreateUserResponse {
  string token = 1;
  User user = 2;
}

// === Update ===
message UpdateUserRequest {
  int64 id = 1;
  string username = 2;
  string full_name = 3;
  string email = 4;
  string profile_pic_url = 5;
}

message UpdateUserResponse {
  User user = 1;
}

// === Delete ===
message DeleteUserRequest {
  int64 id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}

// === Get ===
message GetUserByIDRequest {
  int64 id = 1;
}

message GetUserByIDResponse {
  User user = 1;
}

// === List ===
message ListUsersRequest {
  int32 page_size = 1;
  bytes page_token = 2;
}


message ListUsersResponse {
  repeated User users = 1;
  bytes next_page_token = 2;
}

message FollowUserRequest {
  int64 user_id = 1;
  int64 following_id = 2;
}

message FollowUserResponse {
  bool success = 1;
} 

message UnfollowUserRequest {
  int64 user_id = 1;
  int64 following_id = 2;
}

message UnfollowUserResponse {
  bool success = 1;
}

// === Service ===
service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc FollowUser(FollowUserRequest) returns (FollowUserResponse);
  rpc UnfollowUser(UnfollowUserRequest) returns (UnfollowUserResponse);
}
