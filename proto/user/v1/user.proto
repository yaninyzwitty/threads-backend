syntax = "proto3";

package user.v1;


import "google/protobuf/timestamp.proto";

message User {
  int64 id = 1;
  string username = 2;
  string full_name = 3;
  string email = 4;
  string profile_pic_url = 5;
  bool is_verified = 6;

  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
  string password = 9;
  
}

message FollowedEvent {
  string event_id = 1;
  int64 user_id = 2; // TODO-remove
  int64 following_id = 3;
  google.protobuf.Timestamp followed_at = 4;
}

message UnfollowedEvent {
  string event_id = 1;
  int64 user_id = 2;
  int64 following_id = 3;
  google.protobuf.Timestamp unfollowed_at = 4;
}

message LoginUserRequest {
  string email = 1;
  string password = 2;
}

message LoginUserResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message CreateUserRequest {
  string username = 1;
  string full_name = 2;
  string email = 3;
  string profile_pic_url = 4;
  bool is_verified = 5;
  string password = 6;
}

message CreateUserResponse {
  User user = 1;
}

message RefreshTokenRequest {
  string refresh_token = 1;
  int64 user_id = 2;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message UpdateUserRequest {
  int64 id = 1;
  string username = 2;
  string full_name = 3;
  string email = 4;
  string profile_pic_url = 5;
}

message UpdateUserResponse {
  User user = 1;
}

// === Get ===
message GetUserByIDRequest {
  int64 id = 1;
}

message GetUserByIDResponse {
  User user = 1;
}

// === List ===
message ListUsersRequest {
  int32 page_size = 1;
  bytes page_token = 2;
}


message ListUsersResponse {
  repeated User users = 1;
  bytes next_page_token = 2;
}

message FollowUserRequest {
  int64 following_id = 2;
}

message FollowUserResponse {
  bool success = 1;
} 

message UnfollowUserRequest {
  int64 following_id = 2;
}

message UnfollowUserResponse {
  bool success = 1;
}



// === Delete ===
message DeleteUserRequest {
  int64 id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}


message IncrementFollowingAndFollowerCountRequest {
FollowedEvent followed_event = 1;
}


message IncrementFollowingAndFollowerCountResponse {
bool incremented = 1;
}

message DecrementFollowingAndFollowerCountRequest {
UnfollowedEvent unfollowed_event = 1;
}

message DecrementFollowingAndFollowerCountResponse {
  bool decremented = 1;
}


service UserService {
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
   rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc FollowUser(FollowUserRequest) returns (FollowUserResponse);
  rpc UnfollowUser(UnfollowUserRequest) returns (UnfollowUserResponse);
  rpc IncrementFollowingAndFollowerCount(IncrementFollowingAndFollowerCountRequest) returns (IncrementFollowingAndFollowerCountResponse);
  rpc DecrementFollowingAndFollowerCount(DecrementFollowingAndFollowerCountRequest) returns (DecrementFollowingAndFollowerCountResponse);
  
 

}